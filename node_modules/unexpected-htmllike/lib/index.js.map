{"version":3,"sources":["../src/index.js"],"names":[],"mappings":";;;;;;;;4BACyB,gBAAgB;;;;oBACxB,QAAQ;;;;uBACL,WAAW;;;;wBACV,YAAY;;;;6BACP,iBAAiB;;;;AAE3C,SAAS,OAAO,CAAC,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,iBAAiB,EAAE;;AAE/D,QAAM,eAAe,GAAG,gCAAc,OAAO,EAAE,KAAK,CAAC,CAAC;AACtD,8BAAQ,MAAM,EAAE,eAAe,EAAE,iBAAiB,EAAE,IAAI,iCAAiC,CAAC;AAC1F,WAAO,MAAM,CAAC;CACjB;;AAED,SAAS,OAAO,CAAC,aAAa,EAAE;;AAE5B,WAAO,UAAU,eAAe,EAAE,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE;;AAEzE,eAAO,kBAAK,YAAY,CAAC,aAAa,EAAE,eAAe,EAAE,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC,IAAI,CAAC,UAAA,UAAU,EAAI;;AAE3G,gBAAM,GAAG,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;AAC3B,sCAAQ,GAAG,EAAE,UAAU,CAAC,IAAI,EAAE,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;;AAErF,mBAAO;AACH,sBAAM,EAAE,GAAG;AACX,oBAAI,EAAE,UAAU,CAAC,IAAI;AACrB,sBAAM,EAAE,UAAU,CAAC,MAAM;aAC5B,CAAC;SAEL,CAAC,CAAC;KAEN,CAAC;CACL;;AAED,SAAS,WAAW,CAAC,aAAa,EAAE;;AAEhC,WAAO,UAAU,eAAe,EAAE,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE;;AAEzE,eAAO,2BAAS,aAAa,EAAE,eAAe,EAAE,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC,IAAI,CAAC,UAAA,MAAM,EAAI;;AAE9F,gBAAI,MAAM,CAAC,SAAS,EAAE;AAClB,oBAAM,GAAG,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;AAC3B,0CAAQ,GAAG,EAAE,MAAM,CAAC,SAAS,CAAC,IAAI,EAAE,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;AAC3F,sBAAM,CAAC,SAAS,CAAC,MAAM,GAAG,GAAG,CAAC;aACjC;AACD,mBAAO,MAAM,CAAC;SACjB,CAAC,CAAC;KAEN,CAAC;CACL;;AAGD,SAAS,kBAAkB,CAAC,OAAO,EAAE;;AAEjC,WAAO;AACH,eAAO,EAAE,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,OAAO,CAAC;AACpC,YAAI,EAAE,OAAO,CAAC,OAAO,CAAC;AACtB,gBAAQ,EAAE,WAAW,CAAC,OAAO,CAAC;KACjC,CAAC;CACL;;AAED,kBAAkB,CAAC,cAAc,GAAG,kBAAK,cAAc,CAAC;;qBAEzC,kBAAkB","file":"index.js","sourcesContent":["\nimport isNativeType from './isNativeType';\nimport diff from './diff';\nimport Painter from './painter';\nimport Contains from './contains';\nimport convertToDiff from './convertToDiff';\n\nfunction inspect(adapter, value, depth, output, externalInspector) {\n\n    const diffDescription = convertToDiff(adapter, value);\n    Painter(output, diffDescription, externalInspector, null /* no diff function required */);\n    return output;\n}\n\nfunction getDiff(actualAdapter) {\n\n    return function (expectedAdapter, actual, expected, output, expect, options) {\n\n        return diff.diffElements(actualAdapter, expectedAdapter, actual, expected, expect, options).then(diffResult => {\n\n            const pen = output.clone();\n            Painter(pen, diffResult.diff, expect.inspect.bind(expect), expect.diff.bind(expect));\n\n            return {\n                output: pen,\n                diff: diffResult.diff,\n                weight: diffResult.weight\n            };\n\n        });\n\n    };\n}\n\nfunction getContains(actualAdapter) {\n\n    return function (expectedAdapter, actual, expected, output, expect, options) {\n\n        return Contains(actualAdapter, expectedAdapter, actual, expected, expect, options).then(result => {\n\n            if (result.bestMatch) {\n                const pen = output.clone();\n                Painter(pen, result.bestMatch.diff, expect.inspect.bind(expect), expect.diff.bind(expect));\n                result.bestMatch.output = pen;\n            }\n            return result;\n        });\n\n    };\n}\n\n\nfunction HtmlLikeUnexpected(adapter) {\n\n    return {\n        inspect: inspect.bind(null, adapter),\n        diff: getDiff(adapter),\n        contains: getContains(adapter)\n    };\n}\n\nHtmlLikeUnexpected.DefaultWeights = diff.DefaultWeights;\n\nexport default HtmlLikeUnexpected;"]}