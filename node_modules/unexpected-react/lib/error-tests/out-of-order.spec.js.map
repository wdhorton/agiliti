{"version":3,"sources":["../../src/error-tests/out-of-order.spec.js"],"names":[],"mappings":";;;;;;AAKA,IAAM,UAAU,GAAG,OAAO,CAAE,2BAA2B,CAAC,CAAC;;AAEzD,IAAM,KAAK,GAAG,OAAO,CAAC,cAAc,CAAC,CAAC;AACtC,IAAM,SAAS,GAAG,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC;;AAEzC,IAAM,UAAU,GAAG,OAAO,CAAC,YAAY,CAAC,CAAC;AACzC,IAAM,eAAe,GAAG,OAAO,CAAC,qBAAqB,CAAC,CAAC;;AAEvD,IAAM,MAAM,GAAG,UAAU,CAAC,KAAK,EAAE,CAC5B,GAAG,CAAC,eAAe,CAAC,CAAC;;AAE1B,IAAM,QAAQ,GAAG,KAAK,CAAC,WAAW,CAAC;;AAC/B,UAAM,oBAAG;AACL,eAAO;;;;SAAgB,CAAC;KAC3B;CACJ,CAAC,CAAC;;AAEH,IAAM,sBAAsB,6JACkF,CAAC;;AAE/G,QAAQ,CAAC,uCAAuC,EAAE,YAAM;;AAEpD,MAAE,CAAC,iEAAiE,EAAE,YAAM;;AAExE,cAAM,CAAC;mBAAM,MAAM,CAAC,KAAK,EAAE,uBAAuB,CAAC;SAAA,EAAE,UAAU,EAAE,sBAAsB,CAAC,CAAC;KAC5F,CAAC,CAAC;;AAEH,YAAQ,CAAC,yBAAyB,EAAE,YAAM;;AAEtC,UAAE,CAAC,gCAAgC,EAAE,YAAM;AACvC,gBAAI,SAAS,GAAG,SAAS,CAAC,kBAAkB,CAAC,oBAAC,QAAQ,OAAG,CAAC,CAAC;;AAE3D,kBAAM,CAAC;uBAAM,MAAM,CAAC,SAAS,EAAE,kBAAkB,EAAE;;;;iBAAgB,CAAC;aAAA,EAAE,UAAU,EAAE,sBAAsB,CAAC,CAAC;SAC7G,CAAC,CAAC;KACN,CAAC,CAAC;;AAEH,YAAQ,CAAC,mBAAmB,EAAE,YAAM;;AAEhC,UAAE,CAAC,gCAAgC,EAAE,YAAM;AACvC,gBAAI,SAAS,GAAG,SAAS,CAAC,kBAAkB,CAAC,oBAAC,QAAQ,OAAG,CAAC,CAAC;;AAE3D,kBAAM,CAAC;uBAAM,MAAM,CAAC,SAAS,EAAE,YAAY,EAAE;;;;iBAAgB,CAAC;aAAA,EAAE,UAAU,EAAE,sBAAsB,CAAC,CAAC;SACvG,CAAC,CAAC;KACN,CAAC,CAAC;CACN,CAAC,CAAC","file":"out-of-order.spec.js","sourcesContent":["\n/* These tests check that the right error message appears when requiring the modules in the wrong order\n * These tests can therefore not be run in conjunction with the other tests, and must be run separately\n */\n\nconst EmulateDom = require( '../testHelpers/emulateDom');\n\nconst React = require('react/addons');\nconst TestUtils = React.addons.TestUtils;\n\nconst Unexpected = require('unexpected');\nconst UnexpectedReact = require('../unexpected-react');\n\nconst expect = Unexpected.clone()\n    .use(UnexpectedReact);\n\nconst TestComp = React.createClass({\n    render() {\n        return <div>dummy</div>;\n    }\n});\n\nconst EXPECTED_ERROR_MESSAGE = `The global rendering hook is not attached\nThis probably means React was required before unexpected-react. Check that unexpected-react is required first`;\n\ndescribe('unexpected-react included after react', () => {\n\n    it('throws the message when asserting `React to have been injected`', () => {\n\n        expect(() => expect(React, 'to have been injected'), 'to error', EXPECTED_ERROR_MESSAGE);\n    });\n\n    describe('with `to have rendered`', () => {\n\n        it('throws a helpful error message', () => {\n            var component = TestUtils.renderIntoDocument(<TestComp />);\n\n            expect(() => expect(component, 'to have rendered', <div>dummy</div>), 'to error', EXPECTED_ERROR_MESSAGE);\n        });\n    });\n\n    describe('with `to contain`', () => {\n\n        it('throws a helpful error message', () => {\n            var component = TestUtils.renderIntoDocument(<TestComp />);\n\n            expect(() => expect(component, 'to contain', <div>dummy</div>), 'to error', EXPECTED_ERROR_MESSAGE);\n        });\n    });\n});\n"]}