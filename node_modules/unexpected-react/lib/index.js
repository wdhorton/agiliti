'use strict';

var Backend = require('./react-devtools/backend/backend');
var GlobalHook = require('./react-devtools/backend/GlobalHook');

var EventEmitter = require('events').EventEmitter;

if (typeof global.__REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined') {
    delete global.__REACT_DEVTOOLS_GLOBAL_HOOK__;
}
if (typeof window.__REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined') {
    delete window.__REACT_DEVTOOLS_GLOBAL_HOOK__;
}

console.log(window.__REACT_DEVTOOLS_GLOBAL_HOOK__);
var tempGlobal = {};
GlobalHook(tempGlobal);
console.log('global devtools after GlobalHook()', global.__REACT_DEVTOOLS_GLOBAL_HOOK__);
global.__REACT_DEVTOOLS_GLOBAL_HOOK__ = tempGlobal.__REACT_DEVTOOLS_GLOBAL_HOOK__;
window.__REACT_DEVTOOLS_GLOBAL_HOOK__ = tempGlobal.__REACT_DEVTOOLS_GLOBAL_HOOK__;

console.log(global.__REACT_DEVTOOLS_GLOBAL_HOOK__);
Backend(global.__REACT_DEVTOOLS_GLOBAL_HOOK__);

var hook = global.__REACT_DEVTOOLS_GLOBAL_HOOK__;
var exported = { hook: hook };

hook.sub('renderer-attached', function (args) {
    exported.rendererId = args.renderer;
    exported.helpers = args.helpers;
});

var mounted = [];

var unsub = Hook.hook.sub('mount', function (comp) {
    mounted.push(comp); // TODO: Could we use the root react-id to index the mounts?
    console.log('Mount');
    console.log('keys', exported.helpers);
});

// TODO: Provide a getComponent(component) => rendered component tree from the mount
exported.findComponent = function (component) {
    console.log('Finding component', component, 'in', mounted.length, 'items:');
    console.log(mounted);
};

module.exports = exported;