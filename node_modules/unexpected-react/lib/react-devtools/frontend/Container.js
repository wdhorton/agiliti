/**
 * Copyright (c) 2015-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @flow
 */
'use strict';

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) subClass.__proto__ = superClass; }

var ContextMenu = require('./ContextMenu');
var PropState = require('./PropState');
var React = require('react');
var SearchPane = require('./SearchPane');
var SplitPane = require('./SplitPane');
var TabbedPane = require('./TabbedPane');

var Container = (function (_React$Component) {
  function Container() {
    _classCallCheck(this, Container);

    if (_React$Component != null) {
      _React$Component.apply(this, arguments);
    }
  }

  _inherits(Container, _React$Component);

  _createClass(Container, [{
    key: 'render',
    value: function render() {
      var _this = this;

      var tabs = _extends({
        Elements: function Elements() {
          return React.createElement(SplitPane, {
            initialWidth: 300,
            left: function () {
              return React.createElement(SearchPane, { reload: _this.props.reload });
            },
            right: function () {
              return React.createElement(PropState, { extraPanes: _this.props.extraPanes });
            }
          });
        } }, this.props.extraTabs);
      return React.createElement(
        'div',
        { style: styles.container },
        React.createElement(TabbedPane, { tabs: tabs }),
        React.createElement(ContextMenu, { itemSources: [DEFAULT_MENU_ITEMS, this.props.menuItems] })
      );
    }
  }]);

  return Container;
})(React.Component);

var DEFAULT_MENU_ITEMS = {
  tree: function tree(id, node, store) {
    var items = [];
    if (node.get('name')) {
      items.push({
        title: 'Show all ' + node.get('name'),
        action: function action() {
          return store.changeSearch(node.get('name'));
        } });
    }
    if (store.capabilities.scroll) {
      items.push({
        title: 'Scroll to Node',
        action: function action() {
          return store.scrollToNode(id);
        } });
    }
    return items;
  },
  attr: function attr(id, node, val, path, name, store) {
    var items = [{
      title: 'Store as global variable',
      action: function action() {
        return store.makeGlobal(id, path);
      } }];
    return items;
  } };

var styles = {
  container: {
    flex: 1,
    display: 'flex',
    minWidth: 0 } };

module.exports = Container;