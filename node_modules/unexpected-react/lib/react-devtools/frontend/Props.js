/**
 * Copyright (c) 2015-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @flow
 */
'use strict';

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) subClass.__proto__ = superClass; }

var React = require('react');
var PropVal = require('./PropVal');

var Props = (function (_React$Component) {
  function Props() {
    _classCallCheck(this, Props);

    if (_React$Component != null) {
      _React$Component.apply(this, arguments);
    }
  }

  _inherits(Props, _React$Component);

  _createClass(Props, [{
    key: 'shouldComponentUpdate',
    value: function shouldComponentUpdate(nextProps) {
      if (nextProps === this.props) {
        return false;
      }
      return true;
    }
  }, {
    key: 'render',
    value: function render() {
      var props = this.props.props;
      if (!props || typeof props !== 'object') {
        return React.createElement('span', null);
      }

      var names = Object.keys(props).filter(function (name) {
        return name[0] !== '_' && name !== 'children';
      });

      var items = [];
      names.slice(0, 3).forEach(function (name) {
        items.push(React.createElement(
          'span',
          { key: name, style: styles.prop },
          React.createElement(
            'span',
            { style: styles.propName },
            name
          ),
          '=',
          React.createElement(PropVal, { val: props[name] })
        ));
      });

      if (names.length > 3) {
        items.push('â€¦');
      }
      return React.createElement(
        'span',
        null,
        items
      );
    }
  }]);

  return Props;
})(React.Component);

var styles = {
  prop: {
    paddingLeft: 5 },

  propName: {
    color: 'rgb(165, 103, 42)' } };

module.exports = Props;