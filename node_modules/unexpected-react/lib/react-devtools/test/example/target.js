/**
 * Copyright (c) 2015-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * A TodoMVC++ app for trying out the inspector
 *
 */
'use strict';

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) subClass.__proto__ = superClass; }

var React = require('react');
var assign = require('object-assign');

var Todos = (function (_React$Component) {
  function Todos(props) {
    _classCallCheck(this, Todos);

    _get(Object.getPrototypeOf(Todos.prototype), 'constructor', this).call(this, props);
    this._nextid = 50;
    this.state = {
      todos: [{ title: 'Inspect all the things', completed: true, id: 10 }, { title: 'Profit!!', completed: false, id: 11 }, { title: 'Profit!!', completed: false, id: 12 }],
      filter: 'All' };
  }

  _inherits(Todos, _React$Component);

  _createClass(Todos, [{
    key: 'onAdd',
    value: function onAdd(text) {
      if (!text.trim().length) {
        return;
      }
      this.setState({
        todos: this.state.todos.concat([{
          title: text,
          completed: false,
          id: this._nextid++ }]) });
    }
  }, {
    key: 'toggleComplete',
    value: function toggleComplete(id, completed) {
      var todos = this.state.todos.slice();
      todos.some(function (item) {
        if (item.id === id) {
          item.completed = completed;
          return true;
        }
      });
      this.setState({ todos: todos });
    }
  }, {
    key: 'sort',
    value: function sort() {
      var todos = this.state.todos.slice();
      todos.sort(function (a, b) {
        if (a.title === b.title) {
          return 0;
        }
        return a.title > b.title ? 1 : -1;
      });
      this.setState({ todos: todos });
    }
  }, {
    key: 'changeFilter',
    value: function changeFilter(val) {
      this.setState({
        filter: val });
    }
  }, {
    key: 'render',
    value: function render() {
      return React.createElement(
        'div',
        { style: styles.container },
        React.createElement(
          'h1',
          { style: styles.title },
          'Things to do'
        ),
        React.createElement(NewTodo, { onAdd: this.onAdd.bind(this) }),
        React.createElement(TodoItems, {
          todos: this.state.todos,
          filter: this.state.filter,
          onToggleComplete: this.toggleComplete.bind(this)
        }),
        React.createElement(Filter, { onSort: this.sort.bind(this), onFilter: this.changeFilter.bind(this), filter: this.state.filter })
      );
    }
  }]);

  return Todos;
})(React.Component);

var NewTodo = (function (_React$Component2) {
  function NewTodo(props) {
    _classCallCheck(this, NewTodo);

    _get(Object.getPrototypeOf(NewTodo.prototype), 'constructor', this).call(this, props);
    this.state = { text: '' };
  }

  _inherits(NewTodo, _React$Component2);

  _createClass(NewTodo, [{
    key: 'shouldComponentUpdate',
    value: function shouldComponentUpdate(prevProps, prevState) {
      return prevState !== this.state;
    }
  }, {
    key: 'checkEnter',
    value: function checkEnter(e) {
      if (e.key === 'Enter') {
        this.submit();
      }
    }
  }, {
    key: 'submit',
    value: function submit() {
      this.props.onAdd(this.state.text);
      this.setState({ text: '' });
    }
  }, {
    key: 'render',
    value: function render() {
      var _this = this;

      return React.createElement(
        'div',
        { style: styles.newContainer },
        React.createElement('input', {
          style: styles.newInput,
          value: this.state.text,
          placeholder: 'Add new item',
          onKeyDown: function (e) {
            return _this.checkEnter(e);
          },
          onChange: function (e) {
            return _this.setState({ text: e.target.value });
          }
        }),
        React.createElement(
          'button',
          { onClick: this.submit.bind(this), style: styles.addButton },
          '+'
        )
      );
    }
  }]);

  return NewTodo;
})(React.Component);

var TodoItems = (function () {
  function TodoItems() {
    _classCallCheck(this, TodoItems);
  }

  _createClass(TodoItems, [{
    key: 'render',
    value: function render() {
      var _this2 = this;

      var filterFn = ({
        All: function All() {
          return true;
        },
        Completed: function Completed(item) {
          return item.completed;
        },
        Remaining: function Remaining(item) {
          return !item.completed;
        } })[this.props.filter];
      return React.createElement(
        'ul',
        { style: styles.todos },
        this.props.todos.filter(filterFn).map(function (item) {
          return React.createElement(TodoItem, {
            item: item,
            key: item.id,
            onToggle: function () {
              return _this2.props.onToggleComplete(item.id, !item.completed);
            }
          });
        })
      );
    }
  }]);

  return TodoItems;
})();

var TodoItem = (function () {
  function TodoItem() {
    _classCallCheck(this, TodoItem);
  }

  _createClass(TodoItem, [{
    key: 'render',
    value: function render() {
      return React.createElement(
        'li',
        { onClick: this.props.onToggle },
        React.createElement(
          HoverHighlight,
          { style: styles.todo },
          React.createElement('input', {
            type: 'checkbox',
            style: styles.checkbox,
            readOnly: true,
            checked: this.props.item.completed
          }),
          this.props.item.title
        )
      );
    }
  }]);

  return TodoItem;
})();

var HoverHighlight = (function (_React$Component3) {
  function HoverHighlight(props) {
    _classCallCheck(this, HoverHighlight);

    _get(Object.getPrototypeOf(HoverHighlight.prototype), 'constructor', this).call(this, props);
    this.state = { hover: false };
  }

  _inherits(HoverHighlight, _React$Component3);

  _createClass(HoverHighlight, [{
    key: 'render',
    value: function render() {
      var _this3 = this;

      return React.createElement(
        'div',
        {
          onMouseOver: function () {
            return _this3.setState({ hover: true });
          },
          onMouseOut: function () {
            return _this3.setState({ hover: false });
          },
          style: assign({}, this.props.style, {
            backgroundColor: this.state.hover ? '#eee' : 'transparent' }) },
        this.props.children
      );
    }
  }]);

  return HoverHighlight;
})(React.Component);

var Filter = (function () {
  function Filter() {
    _classCallCheck(this, Filter);
  }

  _createClass(Filter, [{
    key: 'render',
    value: function render() {
      var _this4 = this;

      var options = ['All', 'Completed', 'Remaining'];
      return React.createElement(
        'div',
        { style: styles.filter },
        options.map(function (text) {
          return React.createElement(
            'button',
            {
              key: text,
              style: assign({}, styles.filterButton, text === _this4.props.filter && styles.filterButtonActive),
              onClick: _this4.props.onFilter.bind(null, text)
            },
            text
          );
        })
      );
    }
  }]);

  return Filter;
})();

var styles = {
  container: {
    fontSize: 20,
    fontFamily: 'sans-serif',
    padding: 30,
    boxShadow: '0 2px 5px #ccc',
    width: 300,
    textAlign: 'center',
    margin: '50px auto' },

  filterButton: {
    padding: '5px 10px',
    border: '3px solid #fff',
    outline: 'none',
    margin: '0 5px',
    cursor: 'pointer',
    backgroundColor: 'transparent' },

  filterButtonActive: {
    backgroundColor: '#eef' },

  title: {
    margin: 0,
    fontSize: 25,
    marginBottom: 10 },
  newInput: {
    padding: '5px 10px',
    fontSize: 16 },
  addButton: {
    padding: '0px 8px 5px 7px',
    backgroundColor: 'transparent',
    border: 'none',
    borderRadius: 10,
    fontSize: 25,
    fontWeight: 'bold',
    marginLeft: 6,
    lineHeight: '24px',
    cursor: 'pointer' },

  checkbox: {
    marginRight: 20,
    position: 'relative',
    cursor: 'pointer',
    top: -2 },
  todos: {
    listStyle: 'none',
    textAlign: 'left',
    margin: 0,
    padding: 10 },
  todo: {
    padding: '10px 20px',
    cursor: 'pointer' },

  iframeWatermark: {
    position: 'absolute',
    top: 20,
    left: 20,
    fontSize: 25,
    color: '#ccc',
    fontFamily: 'sans-serif',
    fontWeight: 'bold' },

  longStyle: {
    fontSize: 30,
    width: 200,
    whiteSpace: 'wrap',
    wordBreak: 'break-word',
    wordWrap: 'wrap',
    backgroundColor: 'rgba(100, 100, 200, .3)',
    height: 200,
    overflow: 'auto' } };

var Something = (function () {
  function Something() {
    _classCallCheck(this, Something);
  }

  _createClass(Something, [{
    key: 'doot',
    value: function doot() {
      return 10;
    }
  }]);

  return Something;
})();

var someVal = new Something();
someVal.awesome = 2;

var Wrap = (function (_React$Component4) {
  function Wrap() {
    _classCallCheck(this, Wrap);

    if (_React$Component4 != null) {
      _React$Component4.apply(this, arguments);
    }
  }

  _inherits(Wrap, _React$Component4);

  _createClass(Wrap, [{
    key: 'render',
    value: function render() {
      return React.createElement(
        'div',
        null,
        React.createElement(
          'div',
          { style: styles.iframeWatermark },
          'this is an iframe'
        ),
        React.createElement(Todos, null),
        React.createElement(OldStyle, { awesome: 2 })
      );
    }
  }]);

  return Wrap;
})(React.Component);

var OldStyle = React.createClass({
  displayName: 'OldStyle',

  render: function render() {
    return React.createElement(
      'span',
      null,
      'OldStyle ',
      this.props.awesome
    );
  } });

function long(children) {
  // eslint-disable-line no-unused-vars
  return React.createElement(
    'div',
    { style: styles.longStyle },
    React.createElement(
      'div',
      null,
      'Hello'
    ),
    React.createElement(
      'div',
      null,
      'Hello'
    ),
    React.createElement(
      'div',
      null,
      'Hello'
    ),
    React.createElement(
      'div',
      null,
      'Hello'
    ),
    React.createElement(
      'div',
      null,
      'Hello'
    ),
    React.createElement(
      'div',
      null,
      'Hello'
    ),
    React.createElement(
      'div',
      null,
      'Hello'
    ),
    React.createElement(
      'div',
      null,
      'Hello'
    ),
    React.createElement(
      'div',
      null,
      'Hello'
    ),
    React.createElement(
      'div',
      null,
      'Hello'
    ),
    React.createElement(
      'div',
      null,
      'Hello'
    ),
    React.createElement(
      'div',
      null,
      'Hello'
    ),
    React.createElement(
      'div',
      null,
      'Hello'
    ),
    React.createElement(
      'div',
      null,
      'Hello'
    ),
    React.createElement(
      'div',
      null,
      'Hello'
    ),
    React.createElement(
      'div',
      null,
      'Hello'
    ),
    React.createElement(
      'div',
      null,
      'Hello'
    ),
    React.createElement(
      'div',
      null,
      'Hello'
    ),
    children
  );
}

var Target = (function (_React$Component5) {
  function Target(props) {
    _classCallCheck(this, Target);

    _get(Object.getPrototypeOf(Target.prototype), 'constructor', this).call(this, props);
    this.state = {
      awesome: false,
      num: this.props.count || 5 };
  }

  _inherits(Target, _React$Component5);

  _createClass(Target, [{
    key: 'render',
    value: function render() {
      var _this5 = this;

      if (this.state.num === 1) {
        return React.createElement(
          'div',
          { onClick: function () {
              return _this5.setState({ awesome: !_this5.state.awesome });
            } },
          '' + !!this.state.awesome
        );
      }
      var count = this.state.num;
      var children = [];
      for (var i = 0; i < count; i++) {
        children.push(React.createElement(Target, { key: Math.random(), count: count - 1 }));
      }
      return React.createElement(
        'div',
        { style: {
            margin: 5,
            marginLeft: 10,
            border: '2px solid #ccc' } },
        count,
        ' : ',
        this.state.num,
        ' / ',
        '' + !!this.state.awesome,
        children
      );
    }
  }]);

  return Target;
})(React.Component);

var node = document.createElement('div');
document.body.appendChild(node);
React.render(React.createElement(Wrap, { more: ['a', 2, 'c', 4], str: 'thing', awesome: 1 }), node);

/*
{title: 'Profit!!', completed: false, id: 13},
{title: 'Profit!!', completed: false, id: 14},
{title: 'Profit!!', completed: false, id: 15},
{title: 'Profit!!', completed: false, id: 16},
{title: 'Profit!!', completed: false, id: 17},
{title: 'Profit!!', completed: false, id: 18},
{title: 'Profit!!', completed: false, id: 19},
{title: 'Profit!!', completed: false, id: 21},
{title: 'Profit!!', completed: false, id: 41},
*/
/*<button onClick={this.props.onSort} style={styles.filterButton}>Sort</button>*/ /* for testing highlighing in the presence of multiple scrolls
                                                                                  {long(long(long()))} {/* */ /*<span thing={someVal}/>
                                                                                                              <Target count={1}/>
                                                                                                              <span awesome={2} thing={[1,2,3]} more={{2:3}}/>
                                                                                                              <span val={null}/>
                                                                                                              <span val={undefined}/>
                                                                                                              <div>&lt;</div>*/