/**
 * Copyright (c) 2015-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @flow
 */
'use strict';

var React = require('react');
var globalHook = require('../../backend/GlobalHook');

window.React = React;

var Panel = require('../../frontend/Panel');

var target = document.getElementById('target');

var appSrc = target.getAttribute('data-app-src') || '../../test/example/build/target.js';
var devtoolsSrc = target.getAttribute('data-devtools-src') || './build/backend.js';

var win = target.contentWindow;
globalHook(win);

var iframeSrc = document.getElementById('iframe-src');
if (iframeSrc) {
  win.document.documentElement.innerHTML = iframeSrc.textContent.replace(/&gt;/g, '>');
}

var config = {
  alreadyFoundReact: true,
  inject: function inject(done) {
    _inject(devtoolsSrc, function () {
      var wall = {
        listen: function listen(fn) {
          win.parent.addEventListener('message', function (evt) {
            return fn(evt.data);
          });
        },
        send: function send(data) {
          win.postMessage(data, '*');
        } };
      done(wall);
    });
  } };

function _inject(src, done) {
  if (!src || src === 'false') {
    return done();
  }
  var script = target.contentDocument.createElement('script');
  script.src = src;
  script.onload = done;
  target.contentDocument.body.appendChild(script);
}

function injectMany(sources, done) {
  if (sources.length === 1) {
    return _inject(sources[0], done);
  }
  _inject(sources[0], function () {
    return injectMany(sources.slice(1), done);
  });
}

var sources = appSrc.split('|');

injectMany(sources, function () {
  var node = document.getElementById('container');
  React.render(React.createElement(Panel, config), node);
});