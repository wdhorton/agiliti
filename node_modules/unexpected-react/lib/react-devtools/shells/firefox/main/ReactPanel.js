/**
 * Copyright (c) 2015-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */
'use strict';

var _require = require('dev/panel.js');

var Panel = _require.Panel;

var _require2 = require('sdk/core/heritage');

var Class = _require2.Class;

// panel
// for docs, see
// https://developer.mozilla.org/en-US/Add-ons/SDK/Low-Level_APIs/dev_panel
var ReactPanel = Class({
  'extends': Panel,
  label: 'React',
  tooltip: 'Debug & Develop React Apps',
  icon: './tool-react.png',
  url: './panel.html',
  setup: function setup(options) {},
  dispose: function dispose() {},
  onReady: function onReady() {
    var tabs = require('sdk/tabs');
    var worker = makeWorker();

    var _require3 = require('sdk/messaging');

    var MessageChannel = _require3.MessageChannel;

    var channel = new MessageChannel();
    var addonSide = channel.port1;
    var panelSide = channel.port2;

    function makeWorker() {
      var tmpWorker = tabs.activeTab.attach({
        contentScriptFile: 'build/contentScript.js' });
      tmpWorker.port.on('message', function (data) {
        addonSide.postMessage(data);
      });
      tmpWorker.port.on('hasReact', function (hasReact) {
        metaAddonSide.postMessage({ type: 'hasReact', val: hasReact });
      });
      tmpWorker.port.on('unload', function () {
        metaAddonSide.postMessage('unload');
      });
      tmpWorker.on('error', function (error) {
        console.log('More Error!!', error);
      });
      tmpWorker.port.on('error', function (error) {
        console.log('Error!!', error);
      });
      return tmpWorker;
    }

    addonSide.onmessage = function (evt) {
      worker.port.emit('message', evt.data);
    };

    var metaChannel = new MessageChannel();
    var metaAddonSide = metaChannel.port1;
    var metaPanelSide = metaChannel.port2;

    tabs.activeTab.on('pageshow', function () {
      metaAddonSide.postMessage('show');
      worker = makeWorker();
    });

    this.postMessage('port', [panelSide, metaPanelSide]);
    console.log('Panel ready');
  } });

exports.ReactPanel = ReactPanel;

// this.debuggee = options.debuggee;

// this.debuggee = null;