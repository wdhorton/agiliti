/**
 * Copyright (c) 2015-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 */
'use strict';

var _require = require('chrome');

var Cu = _require.Cu;

// The path to this file was moved in Firefox 44 and later.
// See https://bugzil.la/912121 for more details.
var gDevTools = undefined;
try {
  var _temp = Cu['import']('resource:///modules/devtools/client/framework/' + 'gDevTools.jsm', {});

  gDevTools = _temp.gDevTools;
  _temp;
} catch (e) {
  var _temp2 = Cu['import']('resource:///modules/devtools/gDevTools.jsm', {});

  gDevTools = _temp2.gDevTools;
  _temp2;
}

/**
 * Whenever the devtools inspector panel selection changes, pass that node to
 * __REACT_DEVTOOLS_GLOBAL_HOOK__.$0
 */
function trackSelection() {
  var wc;
  gDevTools.on('webconsole-init', function (_, toolbox, panelFrame) {
    toolbox.once('webconsole-ready', function (eid, panel) {
      wc = panel;
    });
  });

  gDevTools.on('inspector-init', function (_, toolbox, panelFrame) {
    toolbox.once('inspector-ready', function (eid, panel) {
      panel.selection.on('new-node-front', function (ev, val, reason) {
        passSelectedNode(wc.hud.ui.jsterm);
      });
    });
  });
}

function passSelectedNode(jsterm) {
  var inspectorSelection = jsterm.hud.owner.getInspectorSelection();
  var selectedNodeActor = null;
  if (inspectorSelection && inspectorSelection.nodeFront) {
    selectedNodeActor = inspectorSelection.nodeFront.actorID;
    jsterm.requestEvaluation('__REACT_DEVTOOLS_GLOBAL_HOOK__.reactDevtoolsAgent.selectFromDOMNode($0, true)', {
      selectedNodeActor: selectedNodeActor });
  }
}

exports.trackSelection = trackSelection;