/**
 * Copyright (c) 2015-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @flow
 */
'use strict';

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

var React = require('react');
var provideStore = require('../../frontend/provideStore');

var RelayStore = require('./Store');
var QueriesTab = require('./QueriesTab');
var StoreTab = require('./StoreTab');
var ElementPanel = require('./ElementPanel');

var StoreWrapper = provideStore('relayStore');

var RelayPlugin = (function () {
  function RelayPlugin(store, bridge, refresh) {
    var _this = this;

    _classCallCheck(this, RelayPlugin);

    this.bridge = bridge;
    this.store = store;
    this.hasRelay = false;
    this.relayStore = new RelayStore(bridge, store);
    // TODO (kassens): There's a race condition here. The Relay backend
    // implements this call and is initialized from the injected script whereas
    // this file is called from the Panel.
    setTimeout(function () {
      bridge.call('relay:check', [], function (hasRelay) {
        _this.hasRelay = hasRelay;
        refresh();
      });
    }, 1000);
  }

  _createClass(RelayPlugin, [{
    key: 'panes',
    value: function panes() {
      var _this2 = this;

      if (!this.hasRelay) {
        return [];
      }
      return [function (node, id) {
        return React.createElement(
          StoreWrapper,
          { store: _this2.relayStore },
          function () {
            return React.createElement(ElementPanel, { node: node, id: id });
          }
        );
      }];
    }
  }, {
    key: 'teardown',
    value: function teardown() {}
  }, {
    key: 'tabs',
    value: function tabs() {
      var _this3 = this;

      if (!this.hasRelay) {
        return null;
      }
      return {
        Relay: function Relay() {
          return React.createElement(
            StoreWrapper,
            { store: _this3.relayStore },
            function () {
              return React.createElement(QueriesTab, null);
            }
          );
        },
        RelayStore: function RelayStore() {
          return React.createElement(
            StoreWrapper,
            { store: _this3.relayStore },
            function () {
              return React.createElement(StoreTab, null);
            }
          );
        } };
    }
  }]);

  return RelayPlugin;
})();

module.exports = RelayPlugin;