/**
 * Copyright (c) 2015-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * @flow
 */
'use strict';

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

var React = require('react');
var DataView = require('../../frontend/DataView/DataView');
var decorate = require('../../frontend/decorate');

var StoreTab = (function () {
  function StoreTab() {
    _classCallCheck(this, StoreTab);
  }

  _createClass(StoreTab, [{
    key: 'render',
    value: function render() {
      if (!this.props.storeData) {
        return React.createElement(
          'div',
          { style: styles.container },
          React.createElement(
            'h3',
            { style: styles.loading },
            'Loading...'
          )
        );
      }
      return React.createElement(
        'div',
        { style: styles.container },
        React.createElement(
          'h1',
          null,
          'Default Store'
        ),
        React.createElement(DataView, {
          data: { nodes: this.props.storeData.nodes },
          noSort: true,
          readOnly: true,
          showMenu: false,
          startOpen: true,
          inspect: this.props.inspect,
          path: []
        })
      );
    }
  }]);

  return StoreTab;
})();

var styles = {
  container: {
    fontFamily: 'Menlo, sans-serif',
    minHeight: 0,
    flex: 1,
    overflow: 'auto',
    fontSize: 12,
    padding: 30 },
  loading: {
    textAlign: 'center',
    color: '#aaa' } };

module.exports = decorate({
  store: 'relayStore',
  listeners: function listeners() {
    return ['storeData'];
  },
  props: function props(store) {
    return {
      storeData: store.storeData,
      inspect: store.inspect.bind(store, 'relay:store') };
  } }, StoreTab);