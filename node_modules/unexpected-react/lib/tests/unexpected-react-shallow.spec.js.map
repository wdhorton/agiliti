{"version":3,"sources":["../../src/tests/unexpected-react-shallow.spec.js"],"names":[],"mappings":"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","file":"unexpected-react-shallow.spec.js","sourcesContent":["var Unexpected = require('unexpected');\nvar UnexpectedReact = require('../unexpected-react');\n\nvar React = require('react/addons');\n\nvar expect = Unexpected.clone()\n    .installPlugin(UnexpectedReact);\n\nvar ES5Component = React.createClass({\n    displayName: 'ES5Component',\n    render() { return null;}\n});\n\nfunction createNoNameComponent() {\n    return React.createClass({\n        displayName: '',\n        render() { return null;}\n    });\n}\n\nvar NoNameComponent = createNoNameComponent();\n\nclass ClassComponent extends React.Component {\n    render() {\n        return (\n            <div className=\"class-component\">\n                {this.props.content}\n            </div>\n        );\n    }\n}\n\nclass MyDiv extends React.Component {\n    render() {\n        return React.createElement('div', this.props);\n    }\n}\n\nconst FunctionComp = function (props) {\n    return (<div {...props} />);\n};\n\nconst versionParts = React.version.split('.');\nconst isReact014 = (parseFloat(versionParts[0] + '.' + versionParts[1]) >= 0.14);\n\nexpect.addAssertion('<any> to inspect as <string>', function (expect, subject, value) {\n    expect.errorMode = 'bubble';\n    expect(expect.inspect(subject).toString(), 'to equal', value);\n});\n\nexpect.addAssertion('<any> to inspect as <regexp>', function (expect, subject, value) {\n    expect.errorMode = 'bubble';\n    expect(expect.inspect(subject).toString(), 'to match', value);\n});\n\n// The tests assume a narrow terminal\nexpect.output.preferredWidth = 80;\n\ndescribe('unexpected-react-shallow', () => {\n\n    var renderer, renderer2;\n\n    beforeEach(function () {\n        renderer = React.addons.TestUtils.createRenderer();\n        renderer2 = React.addons.TestUtils.createRenderer();\n\n    });\n\n    it('identifies a ReactElement', () => {\n        renderer.render(<MyDiv />);\n        var element = renderer.getRenderOutput();\n\n        expect(element, 'to be a', 'ReactElement');\n    });\n\n    if (isReact014) {\n        it('identifies a pure function component', () => {\n\n            renderer.render(<FunctionComp />);\n            var element = renderer.getRenderOutput();\n\n            expect(element, 'to be a', 'ReactElement');\n        });\n    }\n\n    it('identifies a ShallowRenderer', () => {\n\n        expect(renderer, 'to be a', 'ReactShallowRenderer');\n    });\n\n    describe('inspect', () => {\n\n        it('outputs a tag element with no props', () => {\n\n            renderer.render(<MyDiv />);\n            expect(renderer, 'to inspect as', '<div />');\n        });\n\n        it('outputs a tag element with string  props', () => {\n\n            renderer.render(<MyDiv className=\"test\"/>);\n            expect(renderer, 'to inspect as', '<div className=\"test\" />');\n        });\n\n        it('outputs a tag element with number props', () => {\n\n            renderer.render(<MyDiv id={42} />);\n            expect(() => expect(renderer, 'to equal', 1), 'to throw',\n                'expected <div id={42} /> to equal 1');\n        });\n\n        it('outputs a tag element with boolean props', () => {\n\n            renderer.render(<MyDiv disabled={true} />);\n            expect(() => expect(renderer, 'to equal', 1), 'to throw',\n                'expected <div disabled={true} /> to equal 1');\n        });\n\n        it('outputs a tag element with null props', () => {\n\n            renderer.render(<MyDiv className={null} />);\n            expect(() => expect(renderer, 'to equal', 1), 'to throw',\n                'expected <div className={null} /> to equal 1');\n        });\n\n        it('outputs a tag element with an undefined prop', () => {\n\n            renderer.render(<MyDiv className={undefined} />);\n            expect(() => expect(renderer, 'to equal', 1), 'to throw',\n                'expected <div className={undefined} /> to equal 1');\n        });\n\n        it('outputs a tag element with an object prop', () => {\n\n            var obj = { some: 'prop' };\n            renderer.render(<MyDiv className={obj} />);\n            expect(renderer.getRenderOutput(), 'to inspect as', '<div className={{ some: \\'prop\\' }} />');\n\n        });\n\n        it('outputs a tag element with an function prop', () => {\n\n            var fn = function (a, b) { return a + b; };\n            renderer.render(<MyDiv onClick={fn} />);\n            expect(renderer, 'to inspect as', /<div onClick=\\{function (fn)?\\(a, b\\) \\{[^]+}} ?\\/>/m);\n        });\n\n        it('outputs a tag with a single string child', () => {\n\n            renderer.render(<MyDiv className=\"test\">some content</MyDiv>);\n            expect(renderer, 'to inspect as',\n                '<div className=\"test\">some content</div>');\n        });\n\n        it('outputs an ES5 createClass component props and no children', () => {\n\n            renderer.render(<MyDiv><ES5Component className=\"test\">some content</ES5Component></MyDiv>);\n\n            expect(renderer, 'to inspect as',\n                '<div><ES5Component className=\"test\">some content</ES5Component></div>');\n        });\n\n        it('outputs an ES5 class component props and children', () => {\n\n            renderer.render(<MyDiv><ClassComponent className=\"test\">some content</ClassComponent></MyDiv>);\n\n            expect(renderer, 'to inspect as',\n                '<div><ClassComponent className=\"test\">some content</ClassComponent></div>');\n        });\n\n        it('outputs a set of deep nested components', () => {\n\n            renderer.render(\n                <MyDiv>\n                    <ClassComponent className=\"test\">\n                        <ClassComponent some={1} more={true} props=\"yeah\">\n                          some content\n                        </ClassComponent>\n                        <ClassComponent some={1} more={true} props=\"yeah\">\n                          some different content\n                        </ClassComponent>\n                    </ClassComponent>\n                </MyDiv>);\n\n            expect(renderer, 'to inspect as',\n                '<div>\\n' +\n                '  <ClassComponent className=\"test\">\\n' +\n                '    <ClassComponent some={1} more={true} props=\"yeah\">some content</ClassComponent>\\n' +\n                '    <ClassComponent some={1} more={true} props=\"yeah\">some different content</ClassComponent>\\n' +\n                '  </ClassComponent>\\n' +\n                '</div>');\n        });\n\n        it('outputs a directly created custom ReactElement', function () {\n\n            expect(<ClassComponent className=\"foo\" />, 'to inspect as', '<ClassComponent className=\"foo\" />');\n        });\n\n        it('outputs a directly created native ReactElement', function () {\n\n            expect(<div className=\"foo\" />, 'to inspect as', '<div className=\"foo\" />');\n        });\n\n        it('outputs a directly created inline element (React 0.14)', function () {\n\n            var inlineElement = {\n                type: 'div',\n                props: {\n                    className: 'foo'\n                },\n                key: null,\n                ref: null\n            };\n\n            expect(inlineElement, 'to inspect as', '<div className=\"foo\" />');\n        });\n\n        /* This test is disabled. There's something with the way babel(possibly) is\n         * converting the NoNameComponent - the name is coming out as 'Constructor'\n         * Wallaby.js runs it fine (although wallaby.js has other issues with displayNames not appearing\n         * via the babel transform for createClass, and only appearing if displayName is explicitely set.\n         *\n        it('outputs a component with no-display-name', function () {\n\n            expect(() => expect(<NoNameComponent className=\"foo\" />, 'to equal', 1), 'to throw',\n                'expected <no-display-name className=\"foo\" /> to equal 1');\n        });\n         */\n    });\n\n    describe('diff', () => {\n\n        it('diffs within simple text content inside native element', () => {\n\n            renderer.render(<MyDiv>Some simple content</MyDiv>);\n            var expected = <div>Different content</div>;\n\n            return expect(expect(renderer, 'to have rendered', expected), 'to be rejected with',\n             'expected <div>Some simple content</div>\\n' +\n             'to have rendered <div>Different content</div>\\n' +\n             '\\n' +\n             '<div>\\n'+\n             '  -Some simple content\\n' +\n             '  +Different content\\n' +\n             '</div>'\n            );\n\n        });\n\n        it('shows changed props within a simple native element', () => {\n\n            renderer.render(<MyDiv className=\"actual\">Some simple content</MyDiv>);\n\n            return expect(expect(renderer, 'to have rendered',\n                <div className=\"expected\">\n                    Some simple content\n                </div>), 'to be rejected with',\n                'expected <div className=\"actual\">Some simple content</div>\\n' +\n                'to have rendered <div className=\"expected\">Some simple content</div>\\n' +\n                '\\n' +\n\t            '<div className=\"actual\" // should be className=\"expected\"\\n' +\n                '                        // -actual\\n' +\n                '                        // +expected\\n' +\n                '>\\n' +\n                '  Some simple content\\n' +\n                '</div>');\n        });\n\n        it('shows missing props within a simple native element', () => {\n\n            renderer.render(<MyDiv>Some simple content</MyDiv>);\n\n            return expect(expect(renderer, 'to have rendered',\n                    <div className=\"expected\" id=\"123\">\n                        Some simple content\n                    </div>), 'to be rejected with',\n                'expected <div>Some simple content</div>\\n' +\n                'to have rendered <div className=\"expected\" id=\"123\">Some simple content</div>\\n' +\n                '\\n' +\n                '<div // missing className=\"expected\"\\n' +\n                '   // missing id=\"123\"\\n' +\n                '>\\n' +\n                '  Some simple content\\n' +\n                '</div>');\n        });\n\n        it('ignores extra props within a simple native element', () => {\n\n            renderer.render(<MyDiv id=\"123\" className=\"extra\">Some simple content</MyDiv>);\n\n            return expect(renderer, 'to have rendered',\n                    <div id=\"123\">\n                        Some simple content\n                    </div>);\n        });\n\n        it('does not ignore extra props when using `exactly`', function () {\n\n            renderer.render(<MyDiv id=\"123\" className=\"extra\">Some simple content</MyDiv>);\n            return expect(\n                expect(renderer, 'to have exactly rendered',\n                    <div id=\"123\">\n                      Some simple content\n                    </div>),\n                'to be rejected with',\n                'expected <div id=\"123\" className=\"extra\">Some simple content</div>\\n' +\n                'to have exactly rendered <div id=\"123\">Some simple content</div>\\n' +\n                '\\n' +\n                '<div id=\"123\" className=\"extra\" // className should be removed\\n' +\n                '>\\n' +\n                '  Some simple content\\n' +\n                '</div>');\n        });\n\n        it('matches props on a custom component', function () {\n\n            renderer.render(\n                <MyDiv>\n                    <ClassComponent test={true} className=\"foo\">\n                        <span className=\"bar\">foo</span>\n                    </ClassComponent>\n                </MyDiv>\n            );\n\n            return expect(renderer, 'to have exactly rendered',\n                <div>\n                    <ClassComponent className=\"foo\" test={true}>\n                        <span className=\"bar\">foo</span>\n                    </ClassComponent>\n                </div>);\n        });\n\n        it('matches content rendered as a number', function () {\n\n            renderer.render(<ClassComponent content={0} />);\n            return expect(renderer, 'to have rendered', <div className=\"class-component\">{0}</div>);\n        });\n\n        it('matches content as undefined', function () {\n\n            renderer.render(<ClassComponent content={undefined} />);\n            return expect(renderer, 'to have rendered', <div className=\"class-component\"></div>);\n        });\n\n        it('matches content as null', function () {\n\n            renderer.render(<ClassComponent content={null} />);\n            return expect(renderer, 'to have rendered', <div className=\"class-component\"></div>);\n        });\n\n        it('highlights diffs on a nested custom component', function () {\n\n            renderer.render(\n                <MyDiv>\n                    <ClassComponent test={true} className=\"foo\">\n                        <span className=\"bar\">foo</span>\n                    </ClassComponent>\n                </MyDiv>\n            );\n\n            return expect(expect(renderer, 'to have exactly rendered',\n                <div>\n                    <ClassComponent className=\"foo\" test={false}>\n                        <span className=\"bar\">foo</span>\n                    </ClassComponent>\n                </div>),\n                'to be rejected with',\n                'expected\\n' +\n                '<div>\\n' +\n                '  <ClassComponent test={true} className=\"foo\"><span className=\"bar\">foo</span></ClassComponent>\\n' +\n                '</div>\\n' +\n                'to have exactly rendered\\n' +\n                '<div>\\n' +\n                '  <ClassComponent className=\"foo\" test={false}><span className=\"bar\">foo</span></ClassComponent>\\n' +\n                '</div>\\n' +\n                '\\n' +\n                '<div>\\n' +\n                '  <ClassComponent test={true} // should be test={false}\\n' +\n                '     className=\"foo\"\\n' +\n                '  >\\n' +\n                '    <span className=\"bar\">foo</span>\\n' +\n                '  </ClassComponent>\\n' +\n                '</div>');\n\n        });\n\n\n        it('ignores extra props on a nested custom component when not using `exactly`', function () {\n\n            renderer.render(\n                <MyDiv>\n                    <ClassComponent test={true} className=\"foo\" extraProp=\"boo!\">\n                        <span className=\"bar\">foo</span>\n                    </ClassComponent>\n                </MyDiv>\n            );\n\n            return expect(renderer, 'to have rendered',\n                    <div>\n                        <ClassComponent className=\"foo\" test={true}>\n                            <span className=\"bar\">foo</span>\n                        </ClassComponent>\n                    </div>);\n\n        });\n        it('highlights extra props on a nested custom component when using `exactly`', function () {\n\n            renderer.render(\n                <MyDiv>\n                    <ClassComponent test={true} className=\"foo\" extraProp=\"boo!\">\n                        <span className=\"bar\">foo</span>\n                    </ClassComponent>\n                </MyDiv>\n            );\n\n            return expect(expect(renderer, 'to have exactly rendered',\n                <div>\n                    <ClassComponent className=\"foo\" test={true}>\n                        <span className=\"bar\">foo</span>\n                    </ClassComponent>\n                </div>),\n                'to be rejected with',\n                'expected\\n' +\n                '<div>\\n' +\n                '  <ClassComponent test={true} className=\"foo\" extraProp=\"boo!\">\\n' +\n                '    <span className=\"bar\">foo</span>\\n' +\n                '  </ClassComponent>\\n' +\n                '</div>\\n' +\n                'to have exactly rendered\\n' +\n                '<div>\\n' +\n                '  <ClassComponent className=\"foo\" test={true}><span className=\"bar\">foo</span></ClassComponent>\\n' +\n                '</div>\\n' +\n                '\\n' +\n                '<div>\\n' +\n                '  <ClassComponent test={true} className=\"foo\" extraProp=\"boo!\" // extraProp should be removed\\n' +\n                '  >\\n' +\n                '    <span className=\"bar\">foo</span>\\n' +\n                '  </ClassComponent>\\n' +\n                '</div>');\n\n\n        });\n\n        it('matches array of children in a custom component', function () {\n\n            renderer.render(\n                <MyDiv>\n                    <ClassComponent test={true} className=\"foo\">\n                        <span className=\"one\">1</span>\n                        <span className=\"two\">2</span>\n                    </ClassComponent>\n                </MyDiv>\n            );\n\n            return expect(renderer, 'to have exactly rendered',\n                <div>\n                    <ClassComponent className=\"foo\" test={true}>\n                        <span className=\"one\">1</span>\n                        <span className=\"two\">2</span>\n                    </ClassComponent>\n                </div>);\n        });\n\n        it('highlights a removed item in an array of children in a custom component', function () {\n\n            renderer.render(\n                <MyDiv>\n                    <ClassComponent test={true} className=\"foo\">\n                        <span className=\"one\">1</span>\n                        <span className=\"three\">3</span>\n                    </ClassComponent>\n                </MyDiv>\n            );\n\n            return expect(expect(renderer, 'to have exactly rendered',\n                <div>\n                    <ClassComponent className=\"foo\" test={true}>\n                        <span className=\"one\">1</span>\n                        <span className=\"two\">2</span>\n                        <span className=\"three\">3</span>\n                    </ClassComponent>\n                </div>),\n                'to be rejected with',\n                'expected\\n' +\n                '<div>\\n' +\n                '  <ClassComponent test={true} className=\"foo\">\\n' +\n                '    <span className=\"one\">1</span><span className=\"three\">3</span>\\n' +\n                '  </ClassComponent>\\n' +\n                '</div>\\n' +\n                'to have exactly rendered\\n' +\n                '<div>\\n' +\n                '  <ClassComponent className=\"foo\" test={true}>\\n' +\n                '    <span className=\"one\">1</span>\\n' +\n                '    <span className=\"two\">2</span>\\n' +\n                '    <span className=\"three\">3</span>\\n' +\n                '  </ClassComponent>\\n' +\n                '</div>\\n' +\n                '\\n' +\n                '<div>\\n' +\n                '  <ClassComponent test={true} className=\"foo\">\\n' +\n                '    <span className=\"one\">1</span>\\n' +\n                '    // missing <span className=\"two\">2</span>\\n' +\n                '    <span className=\"three\">3</span>\\n' +\n                '  </ClassComponent>\\n' +\n                '</div>');\n        });\n\n\n        it('highlights an added item in an array of children in a custom component', function () {\n\n            renderer.render(\n                <MyDiv>\n                    <ClassComponent test={true} className=\"foo\">\n                        <span className=\"one\">1</span>\n                        <span className=\"three\">3</span>\n                    </ClassComponent>\n                </MyDiv>\n            );\n\n            return expect(expect(renderer, 'to have exactly rendered',\n                <div>\n                    <ClassComponent className=\"foo\" test={true}>\n                        <span className=\"one\">1</span>\n                        <span className=\"two\">2</span>\n                        <span className=\"three\">3</span>\n                    </ClassComponent>\n                </div>\n            ), 'to be rejected with',\n                'expected\\n' +\n                '<div>\\n' +\n                '  <ClassComponent test={true} className=\"foo\">\\n' +\n                '    <span className=\"one\">1</span><span className=\"three\">3</span>\\n' +\n                '  </ClassComponent>\\n' +\n                '</div>\\n' +\n                'to have exactly rendered\\n' +\n                '<div>\\n' +\n                '  <ClassComponent className=\"foo\" test={true}>\\n' +\n                '    <span className=\"one\">1</span>\\n' +\n                '    <span className=\"two\">2</span>\\n' +\n                '    <span className=\"three\">3</span>\\n' +\n                '  </ClassComponent>\\n' +\n                '</div>\\n' +\n                '\\n' +\n                '<div>\\n' +\n                '  <ClassComponent test={true} className=\"foo\">\\n' +\n                '    <span className=\"one\">1</span>\\n' +\n                '    // missing <span className=\"two\">2</span>\\n' +\n                '    <span className=\"three\">3</span>\\n' +\n                '  </ClassComponent>\\n' +\n                '</div>');\n\n        });\n\n        it('accepts added children at the end of an array when not using `exactly`', function () {\n\n            renderer.render(\n                <MyDiv>\n                    <ClassComponent test={true} className=\"foo\">\n                        <span className=\"one\">1</span>\n                        <span className=\"two\">2</span>\n                        <span className=\"three\">3</span>\n                    </ClassComponent>\n                </MyDiv>\n            );\n\n            return expect(renderer, 'to have rendered',\n                <div>\n                    <ClassComponent className=\"foo\" test={true}>\n                        <span className=\"one\">1</span>\n                        <span className=\"two\">2</span>\n                    </ClassComponent>\n                </div>);\n        });\n\n        it('accepts added children in the middle of an array when not using `exactly`', function () {\n\n            renderer.render(\n                <MyDiv>\n                    <ClassComponent test={true} className=\"foo\">\n                        <span className=\"one\">1</span>\n                        <span className=\"two\">2</span>\n                        <span className=\"three\">3</span>\n                    </ClassComponent>\n                </MyDiv>\n            );\n\n            return expect(renderer, 'to have rendered',\n                <div>\n                    <ClassComponent className=\"foo\" test={true}>\n                        <span className=\"one\">1</span>\n                        <span className=\"three\">3</span>\n                    </ClassComponent>\n                </div>);\n        });\n\n        it('highlights different typed children', function () {\n\n            renderer.render(\n                <MyDiv>\n                    <ClassComponent test={true} className=\"foo\">\n                        <ClassComponent child={true} />\n                    </ClassComponent>\n                </MyDiv>\n            );\n\n\n            return expect(expect(renderer, 'to have rendered',\n                <div>\n                    <ClassComponent className=\"foo\" test={true}>\n                        <ES5Component child={true} />\n                    </ClassComponent>\n                </div>),\n                'to be rejected with',\n                'expected\\n' +\n                '<div>\\n' +\n                '  <ClassComponent test={true} className=\"foo\"><ClassComponent child={true} /></ClassComponent>\\n' +\n                '</div>\\n' +\n                'to have rendered\\n' +\n                '<div>\\n' +\n                '  <ClassComponent className=\"foo\" test={true}><ES5Component child={true} /></ClassComponent>\\n' +\n                '</div>\\n' +\n                '\\n' +\n                '<div>\\n' +\n                '  <ClassComponent test={true} className=\"foo\">\\n' +\n                '    <ClassComponent // should be <ES5Component\\n' +\n                '       child={true}/>\\n' +\n                '  </ClassComponent>\\n' +\n                '</div>');\n        });\n\n        it('matches matching objects as props deeply not be reference', function () {\n\n            var objectA = { some: 'prop', arr: [ 1, 2, 3 ] };\n            var objectB = { some: 'prop', arr: [ 1, 2, 3 ] };\n\n            renderer.render(\n                <MyDiv>\n                    <ClassComponent test={objectA} />\n                </MyDiv>\n            );\n\n            return expect(renderer, 'to have rendered',\n                <div>\n                    <ClassComponent test={objectB} />\n                </div>);\n        });\n\n        it('highlights different objects as props deeply not be reference', function () {\n\n            var objectA = { some: 'prop', arr: [ 1, 2, 3 ] };\n            var objectB = { some: 'prop', arr: [ 1, 2, 4 ] };\n\n            renderer.render(\n                <MyDiv>\n                    <ClassComponent test={objectA} />\n                </MyDiv>\n            );\n\n            // I don't understand the '...' here. This may change, it looks like an issue with inspect(),\n            // or possibly just my understanding (or lack of), of how inspect() chooses the depth\n            return expect(expect(renderer, 'to have rendered',\n                <div>\n                    <ClassComponent test={objectB} />\n                </div>),\n                'to be rejected with',\n                \"expected <div><ClassComponent test={{ some: 'prop', arr: ... }} /></div>\\n\" +\n                \"to have rendered <div><ClassComponent test={{ some: 'prop', arr: [ 1, 2, 4 ] }} /></div>\\n\" +\n                '\\n' +\n                '<div>\\n' +\n                '  <ClassComponent\\n' +\n                \"     test={{ some: 'prop', arr: [ 1, 2, 3 ] }} // should be test={{ some: 'prop', arr: [ 1, 2, 4 ] }}\\n\" +\n                '                                               // {\\n' +\n                \"                                               //   some: 'prop',\\n\" +\n                '                                               //   arr: [\\n' +\n                '                                               //     1,\\n' +\n                '                                               //     2,\\n' +\n                '                                               //     3 // should equal 4\\n' +\n                '                                               //   ]\\n' +\n                '                                               // }\\n' +\n                '  />\\n' +\n                '</div>');\n        });\n\n        it('matches a multi-text child', function () {\n\n            var content = 'test';\n            var content2 = 'test';\n            renderer.render(\n                <MyDiv>\n                    <ClassComponent>\n                        some text {content}\n                    </ClassComponent>\n                </MyDiv>\n            );\n\n            return expect(renderer, 'to have rendered',\n                <div>\n                    <ClassComponent>\n                        some text {content2}\n                    </ClassComponent>\n                </div>);\n        });\n\n        it('matches a multi-text child to a single text child without exactly', function () {\n\n            var content = 'test';\n            renderer.render(\n                <MyDiv>\n                    <ClassComponent>\n                        some text {content}\n                    </ClassComponent>\n                </MyDiv>\n            );\n\n            return expect(renderer, 'to have rendered',\n                <div>\n                    <ClassComponent>\n                        some text test\n                    </ClassComponent>\n                </div>);\n        });\n\n        it('matches a multi-text child including a number to a single text child without exactly', function () {\n\n            var content = 5;\n            renderer.render(\n                <MyDiv>\n                    <ClassComponent>\n                        some {content} value\n                    </ClassComponent>\n                </MyDiv>\n            );\n\n            return expect(renderer, 'to have rendered',\n                <div>\n                    <ClassComponent>\n                        some 5 value\n                    </ClassComponent>\n                </div>);\n        });\n\n        it('matches a multi-text child including a null to a single text child without exactly', function () {\n\n            var content = null;\n            renderer.render(\n                <MyDiv>\n                    <ClassComponent>\n                        some {content} value\n                    </ClassComponent>\n                </MyDiv>\n            );\n\n            return expect(renderer, 'to have rendered',\n                <div>\n                    <ClassComponent>\n                        some  value\n                    </ClassComponent>\n                </div>);\n        });\n\n        it('matches a multi-text child including an undefined to a single text child without exactly', function () {\n\n            var content = undefined;\n            renderer.render(\n                <MyDiv>\n                    <ClassComponent>\n                        some {content} value\n                    </ClassComponent>\n                </MyDiv>\n            );\n\n            return expect(renderer, 'to have rendered',\n                <div>\n                    <ClassComponent>\n                        some  value\n                    </ClassComponent>\n                </div>);\n        });\n\n        it('matches a multi-text child including a boolean to a single text child without exactly', function () {\n\n            var content = true;\n            renderer.render(\n                <MyDiv>\n                    <ClassComponent>\n                        some {content} value\n                    </ClassComponent>\n                </MyDiv>\n            );\n\n            // An inline boolean is converted to null, so this \"just works\"\n            return expect(renderer, 'to have rendered',\n                <div>\n                    <ClassComponent>\n                        some  value\n                    </ClassComponent>\n                </div>);\n        });\n\n        it('highlights string break-down changes in a multi-text child with `exactly`', function () {\n\n            var content = 'test';\n            renderer.render(\n                <MyDiv>\n                    <ClassComponent>\n                        some text {content}\n                    </ClassComponent>\n                </MyDiv>\n            );\n\n            return expect(expect(renderer, 'to have exactly rendered',\n                <div>\n                    <ClassComponent>\n                        some text test\n                    </ClassComponent>\n                </div>),\n                'to be rejected with',\n                'expected <div><ClassComponent>some text test</ClassComponent></div>\\n' +\n                'to have exactly rendered <div><ClassComponent>some text test</ClassComponent></div>\\n' +\n                '\\n' +\n                '<div>\\n' +\n                '  <ClassComponent>\\n' +\n                '    -some text \\n' +\n                '    +some text test\\n' +\n                '    test // should be removed\\n' +\n                '  </ClassComponent>\\n' +\n                '</div>');\n        });\n\n        it('highlights changed in a multi-text child', function () {\n\n            var content = 'foo';\n            var content2 = 'bar';\n            renderer.render(\n                <MyDiv>\n                    <ClassComponent>\n                        some text {content}\n                    </ClassComponent>\n                </MyDiv>\n            );\n\n            return expect(expect(renderer, 'to have rendered',\n                <div>\n                    <ClassComponent>\n                        some text {content2}\n                    </ClassComponent>\n                </div>),\n                'to be rejected with',\n                'expected <div><ClassComponent>some text foo</ClassComponent></div>\\n' +\n                'to have rendered <div><ClassComponent>some text bar</ClassComponent></div>\\n' +\n                '\\n' +\n                '<div>\\n' +\n                '  <ClassComponent>\\n' +\n                '    -some text foo\\n' +\n                '    +some text bar\\n' +\n                '  </ClassComponent>\\n' +\n                '</div>');\n        });\n\n        it('matches a mixed content child', function () {\n\n            var content = <ES5Component foo=\"bar\" />;\n            var content2 = <ES5Component foo=\"bar\" />;\n\n            renderer.render(\n                <MyDiv>\n                    <ClassComponent>\n                        some text {content}\n                    </ClassComponent>\n                </MyDiv>\n            );\n\n            return expect(renderer, 'to have rendered',\n                <div>\n                    <ClassComponent>\n                        some text {content2}\n                    </ClassComponent>\n                </div>);\n        });\n\n        it('highlights changes in a mixed content child', function () {\n\n            var content = <ES5Component foo=\"bar\" />;\n            var content2 = <ES5Component foo=\"blah\" />;\n\n            renderer.render(\n                <MyDiv>\n                    <ClassComponent>\n                        some text {content}\n                    </ClassComponent>\n                </MyDiv>\n            );\n\n            return expect(expect(renderer, 'to have rendered',\n                <div>\n                    <ClassComponent>\n                        some text {content2}\n                    </ClassComponent>\n                </div>),\n                'to be rejected with',\n                'expected <div><ClassComponent>some text <ES5Component foo=\"bar\" /></ClassComponent></div>\\n' +\n                'to have rendered <div><ClassComponent>some text <ES5Component foo=\"blah\" /></ClassComponent></div>\\n' +\n                '\\n' +\n                '<div>\\n' +\n                '  <ClassComponent>\\n' +\n                '    some text \\n' +\n                '    <ES5Component foo=\"bar\" // should be foo=\"blah\"\\n' +\n                '                            // -bar\\n' +\n                '                            // +blah\\n' +\n                '    />\\n' +\n                '  </ClassComponent>\\n' +\n                '</div>');\n        });\n\n        it('highlights removals in multi-string content', function () {\n            var content = 'test';\n\n            renderer.render(\n                <MyDiv>\n                    <ClassComponent>\n                        some text\n                    </ClassComponent>\n                </MyDiv>\n            );\n            return expect(expect(renderer, 'to have exactly rendered',\n                <div>\n                    <ClassComponent>\n                        some text {content}\n                    </ClassComponent>\n                </div>),\n                'to be rejected with',\n                'expected <div><ClassComponent>some text</ClassComponent></div>\\n' +\n                'to have exactly rendered <div><ClassComponent>some text test</ClassComponent></div>\\n' +\n                '\\n' +\n                '<div>\\n' +\n                '  <ClassComponent>\\n' +\n                '    -some text\\n' +\n                '    +some text \\n' +\n                '    // missing test\\n' +\n                '  </ClassComponent>\\n' +\n                '</div>');\n        });\n\n        it('highlights removals in complex content with exactly', function () {\n\n            renderer.render(\n                <MyDiv>\n                    <ClassComponent>\n                        <div className=\"one\" />\n                        <ES5Component className=\"three\" />\n                        <span>foo</span>\n                    </ClassComponent>\n                </MyDiv>\n            );\n\n            return expect(expect(renderer, 'to have exactly rendered',\n                <div>\n                    <ClassComponent>\n                        <div className=\"one\" />\n                        <span>foo</span>\n                    </ClassComponent>\n                </div>),\n                'to be rejected with',\n                'expected\\n' +\n                '<div>\\n' +\n                '  <ClassComponent>\\n' +\n                '    <div className=\"one\" /><ES5Component className=\"three\" /><span>foo</span>\\n' +\n                '  </ClassComponent>\\n' +\n                '</div>\\n' +\n                'to have exactly rendered <div><ClassComponent><div className=\"one\" /><span>foo</span></ClassComponent></div>\\n' +\n                '\\n' + '<div>\\n' +\n                '  <ClassComponent>\\n' +\n                '    <div className=\"one\" />\\n' +\n                '    <ES5Component className=\"three\" /> // should be removed\\n' +\n                '    <span>foo</span>\\n' +\n                '  </ClassComponent>\\n' +\n                '</div>');\n        });\n\n        it('highlights removals in complex content with `with all children`', function () {\n\n            renderer.render(\n                <MyDiv>\n                    <ClassComponent>\n                        <div className=\"one\" />\n                        <ES5Component className=\"three\" />\n                        <span>foo</span>\n                    </ClassComponent>\n                </MyDiv>\n            );\n\n            return expect(expect(renderer, 'to have rendered with all children',\n                <div>\n                    <ClassComponent>\n                        <div className=\"one\" />\n                        <span>foo</span>\n                    </ClassComponent>\n                </div>), 'to be rejected with',\n                'expected\\n' +\n                '<div>\\n' +\n                '  <ClassComponent>\\n' +\n                '    <div className=\"one\" /><ES5Component className=\"three\" /><span>foo</span>\\n' +\n                '  </ClassComponent>\\n' +\n                '</div>\\n' +\n                'to have rendered with all children <div><ClassComponent><div className=\"one\" /><span>foo</span></ClassComponent></div>\\n' +\n                '\\n' +\n                '<div>\\n' +\n                '  <ClassComponent>\\n' +\n                '    <div className=\"one\" />\\n' +\n                '    <ES5Component className=\"three\" /> // should be removed\\n' +\n                '    <span>foo</span>\\n' +\n                '  </ClassComponent>\\n' +\n                '</div>');\n        });\n\n        it('highlights the block removal for deep children', function () {\n            renderer.render(\n                <MyDiv>\n                    <ul>\n                        <li>one</li>\n                        <li>two</li>\n                        <li>three</li>\n                    </ul>\n                </MyDiv>\n            );\n\n            return expect(expect(renderer, 'to have rendered with all children',\n                <div>\n                    <ul>\n                        <li>one</li>\n                        <li>two</li>\n                    </ul>\n                </div>),\n                'to be rejected with',\n                'expected <div><ul><li>one</li><li>two</li><li>three</li></ul></div>\\n' +\n                'to have rendered with all children <div><ul><li>one</li><li>two</li></ul></div>\\n' +\n                '\\n' +\n                '<div>\\n' +\n                '  <ul>\\n' +\n                '    <li>one</li>\\n' +\n                '    <li>two</li>\\n' +\n                '    <li>three</li> // should be removed\\n' +\n                '  </ul>\\n' +\n                '</div>');\n        });\n\n        it('identifies when a string element should be a real element', function () {\n\n            renderer.render(\n                <MyDiv className=\"outer\">\n                    <span>123</span>\n                </MyDiv>);\n\n            return expect(expect(renderer, 'to have rendered with all wrappers',\n                <div className=\"outer\">\n                    123\n                </div>),\n                'to be rejected with',\n                'expected <div className=\"outer\"><span>123</span></div>\\n' +\n                'to have rendered with all wrappers <div className=\"outer\">123</div>\\n' +\n                '\\n' +\n                '<div className=\"outer\">\\n' +\n                '  <span> // wrapper should be removed\\n' +\n                '    123\\n' +\n                '  </span> // wrapper should be removed\\n' +\n                '</div>');\n        });\n\n        it('identifies when a number element should be a real element', function () {\n\n            renderer.render(\n                <MyDiv className=\"outer\">\n                    <span>{123}</span>\n                </MyDiv>);\n\n            return expect(expect(renderer, 'to have rendered with all wrappers',\n                <div className=\"outer\">\n                    {123}\n                </div>),\n                'to be rejected with',\n                'expected <div className=\"outer\"><span>123</span></div>\\n' +\n                'to have rendered with all wrappers <div className=\"outer\">123</div>\\n' +\n                '\\n' +\n                '<div className=\"outer\">\\n' +\n                '  <span> // wrapper should be removed\\n' +\n                '    123\\n' +\n                '  </span> // wrapper should be removed\\n' +\n                '</div>');\n        });\n\n\n\n        it('identifies when a real element should be a string element', function () {\n\n            renderer.render(\n                <MyDiv className=\"outer\">\n                    123\n                </MyDiv>);\n\n            return expect(expect(renderer, 'to have rendered',\n                <div className=\"outer\">\n                    <span>123</span>\n                </div>),\n                'to be rejected with',\n                'expected <div className=\"outer\">123</div>\\n' +\n                'to have rendered <div className=\"outer\"><span>123</span></div>\\n' +\n                '\\n' +\n                '<div className=\"outer\">\\n' +\n                '  123 // should be <span>123</span>\\n' +\n                '</div>');\n        });\n\n        it('identifies when a real element should be a number element', function () {\n\n            renderer.render(\n                <MyDiv className=\"outer\">\n                    {123}\n                </MyDiv>);\n\n            return expect(expect(renderer, 'to have rendered',\n                <div className=\"outer\">\n                    <span>123</span>\n                </div>),\n                'to be rejected with',\n                'expected <div className=\"outer\">123</div>\\n' +\n                'to have rendered <div className=\"outer\"><span>123</span></div>\\n' +\n                '\\n' +\n                '<div className=\"outer\">\\n' +\n                '  123 // should be <span>123</span>\\n' +\n                '</div>');\n        });\n\n        it('ignores components that render null in an array when using `with all children`', function () {\n\n            const RenderNull = React.createClass({\n\n               render: function () {\n\n                   const children = [ <span key=\"1\">one</span>, null, <span key=\"2\">two</span> ];\n                    return (\n\n                        <div className=\"something\">\n                            {children}\n                        </div>\n                    );\n               }\n            });\n            renderer.render(<RenderNull />);\n            return expect(renderer, 'to have rendered with all children',\n                <div>\n                    <span>one</span>\n                    <span>two</span>\n                </div>);\n        });\n\n        it('ignores null children when using `with all children`', function () {\n\n            const RenderNull = React.createClass({\n\n                render: function () {\n\n                    return (\n                        <div>\n                            {null}\n                        </div>\n                    );\n                }\n            });\n            renderer.render(<RenderNull />);\n\n            return expect(renderer, 'to have rendered with all children', <div /> );\n        });\n\n        it(\"highlights when an element renders children when it shouldn't when using `with all children`\", function () {\n\n            const RenderNull = React.createClass({\n\n                render: function () {\n\n                    return (\n                        <div>\n                            <span />\n                        </div>\n                    );\n                }\n            });\n            renderer.render(<RenderNull />);\n\n            return expect(expect(renderer, 'to have rendered with all children',\n                <div />\n                ),\n                'to be rejected with',\n                'expected <div><span /></div> to have rendered with all children <div />\\n' +\n                '\\n' +\n                '<div>\\n' +\n                '  <span /> // should be removed\\n' +\n                '</div>' );\n        });\n    });\n\n\n    describe('`to equal`', function () {\n\n        it('matches renderer output to a component tree', function () {\n\n            renderer.render(<MyDiv><ClassComponent className=\"foo\" /></MyDiv>);\n            return expect(renderer.getRenderOutput(), 'to equal', <div><ClassComponent className=\"foo\" /></div>);\n        });\n\n        it('outputs a diff when the expected is different', function () {\n\n            renderer.render(<MyDiv><ClassComponent className=\"foo\" /></MyDiv>);\n\n            return expect(expect(renderer.getRenderOutput(),\n                'to equal', <div><ClassComponent className=\"foobar\" /></div>),\n            'to be rejected with',\n                'expected <div><ClassComponent className=\"foo\" /></div>\\n' +\n                'to equal <div><ClassComponent className=\"foobar\" /></div>\\n' +\n                '\\n' +\n                '<div>\\n' +\n                '  <ClassComponent className=\"foo\" // should be className=\"foobar\"\\n' +\n                '                                  // -foo\\n' +\n                '                                  // +foobar\\n' +\n                '  />\\n' +\n                '</div>');\n        });\n    });\n\n\n    describe('contains', function () {\n\n        it('finds an match at the top level', function () {\n\n            renderer.render(<MyDiv><ClassComponent className=\"foo\" /></MyDiv>);\n            return expect(renderer, 'to contain', <div><ClassComponent className=\"foo\" /></div>);\n        });\n\n        it('finds a match at a deeper level', function () {\n\n            renderer.render(<MyDiv><span><ClassComponent className=\"foo\" /></span></MyDiv>);\n            return expect(renderer, 'to contain', <ClassComponent className=\"foo\" />);\n        });\n\n        it('finds a string content', function () {\n            renderer.render(<MyDiv><span>some content one</span><span>some content two</span></MyDiv>);\n            return expect(renderer, 'to contain', 'some content two');\n        });\n\n        it('does not find a string that does not exist', function () {\n\n            renderer.render(<MyDiv><span>some content one</span><span>some content two</span></MyDiv>);\n            return expect(() => expect(renderer, 'to contain', 'some content three'), 'to throw',\n                'expected <div><span>some content one</span><span>some content two</span></div>\\n' +\n                \"to contain 'some content three'\\n\" +\n                '\\n' +\n                'the best match was\\n' +\n                '-some content one\\n' +\n                '+some content three');\n        });\n\n\n\n        it('does not find a partial string', function () {\n\n            // To do this now, you can use an `expect.it(...)` block\n            renderer.render(<MyDiv><span>some content one</span><span>some content two</span></MyDiv>);\n            return expect(() => expect(renderer, 'to contain', 'some content'),\n                'to throw',\n                'expected <div><span>some content one</span><span>some content two</span></div>\\n' +\n                \"to contain 'some content'\\n\" +\n                '\\n' +\n                'the best match was\\n' +\n                '-some content one\\n' +\n                '+some content');\n        });\n\n        it('finds a multi-part string', function () {\n\n            renderer.render(<MyDiv><span>button clicked {5} times</span></MyDiv>);\n            return expect(renderer, 'to contain', 'button clicked 5 times');\n        });\n\n\n        it('does not find a multi-part string when `exactly` is used', function () {\n\n            renderer.render(<MyDiv><span>button clicked {5} times</span></MyDiv>);\n            return expect(() => expect(renderer, 'to contain exactly', 'button clicked 5 times'),\n                'to throw',\n                'expected <div><span>button clicked 5 times</span></div>\\n' +\n                \"to contain exactly 'button clicked 5 times'\\n\" +\n                '\\n' +\n                'the best match was\\n' +\n                '-button clicked \\n' +\n                '+button clicked 5 times');\n        });\n\n        it('does not find a part of a multi-part string', function () {\n\n            // See the 'does not find a partial string' test above\n            renderer.render(<MyDiv><span>button clicked {5} times</span></MyDiv>);\n\n            // TODO: I don't understand how this can throw - 'to contain' returns a promise.\n            return expect(() => expect(renderer, 'to contain', 'button clicked '), 'to throw',\n                'expected <div><span>button clicked 5 times</span></div>\\n' +\n                \"to contain 'button clicked '\\n\" +\n                '\\n' +\n                'the best match was\\n' +\n                '-button clicked 5 times\\n' +\n                '+button clicked ');\n\n        });\n\n        it('finds part of a multi-part string when exactly is used', function () {\n\n            renderer.render(<MyDiv><span>button clicked {5} times</span></MyDiv>);\n            return expect(renderer, 'to contain exactly', 'button clicked ');\n        });\n\n        it('finds a match in an array of children', function () {\n\n            renderer.render(\n                <MyDiv>\n                    <span>nested</span>\n                    <span>\n                        <ClassComponent className=\"bar\" />\n                        <ClassComponent className=\"foo\" />\n                        <ClassComponent className=\"cheese\" />\n                    </span>\n                </MyDiv>);\n            return expect(renderer, 'to contain', <ClassComponent className=\"foo\" />);\n        });\n\n        it('does not find a match when it does not exist', function () {\n\n            renderer.render(\n                <MyDiv>\n                    <span>nested</span>\n                    <span>\n                        <ClassComponent className=\"bar\" />\n                        <ClassComponent className=\"foo\" />\n                        <ClassComponent className=\"cheese\" />\n                    </span>\n                </MyDiv>);\n\n            return expect(expect(renderer, 'to contain', <ClassComponent className=\"notexists\" />),\n                'to be rejected with',\n                'expected\\n' +\n                '<div>\\n' +\n                '  <span>nested</span>\\n' +\n                '  <span>\\n' +\n                '    <ClassComponent className=\"bar\" />\\n' +\n                '    <ClassComponent className=\"foo\" />\\n' +\n                '    <ClassComponent className=\"cheese\" />\\n' +\n                '  </span>\\n' +\n                '</div>\\n' +\n                'to contain <ClassComponent className=\"notexists\" />\\n' +\n                '\\n' +\n                'the best match was\\n' +\n                '<ClassComponent className=\"bar\" // should be className=\"notexists\"\\n' +\n                '                                // -bar\\n' +\n                '                                // +notexists\\n' +\n                '/>');\n        });\n\n        it('does not find a match when the children of a candidate match are different', function () {\n\n            renderer.render(\n                <MyDiv>\n                    <span>nested</span>\n                    <span>\n                        <ClassComponent className=\"bar\" />\n                        <ClassComponent className=\"foo\" />\n                        <ClassComponent className=\"candidate\">\n                            <span>something else</span>\n                        </ClassComponent>\n                    </span>\n                </MyDiv>);\n\n            return expect(expect(renderer, 'to contain',\n                    <ClassComponent className=\"candidate\">\n                        <span>cheese</span>\n                    </ClassComponent>),\n                    'to be rejected with',\n                    'expected\\n' +\n                    '<div>\\n' +\n                    '  <span>nested</span>\\n' +\n                    '  <span>\\n' +\n                    '    <ClassComponent className=\"bar\" />\\n' +\n                    '    <ClassComponent className=\"foo\" />\\n' +\n                    '    <ClassComponent className=\"candidate\"><span>something else</span></ClassComponent>\\n' +\n                    '  </span>\\n' +\n                    '</div>\\n' +\n                    'to contain <ClassComponent className=\"candidate\"><span>cheese</span></ClassComponent>\\n' +\n                    '\\n' +\n                    'the best match was\\n' +\n                    '<ClassComponent className=\"candidate\">\\n' +\n                    '  <span>\\n' +\n                    '    -something else\\n' +\n                    '    +cheese\\n' +\n                    '  </span>\\n' +\n                    '</ClassComponent>');\n        });\n\n        it('finds the match when there are extra children in the render, but `exactly` is not used', function () {\n            renderer.render(\n                <MyDiv>\n                    <span>nested</span>\n                    <span>\n                        <ClassComponent className=\"bar\" />\n                        <ClassComponent className=\"foo\" />\n                        <ClassComponent className=\"candidate\">\n                            <span>one</span>\n                            <span>two</span>\n                            <span>three</span>\n                        </ClassComponent>\n                    </span>\n                </MyDiv>);\n\n            return expect(renderer, 'to contain',\n                <ClassComponent className=\"candidate\">\n                    <span>one</span>\n                    <span>three</span>\n                </ClassComponent>);\n        });\n\n        it('finds the match when there are extra props in the render, but `exactly` is not used', function () {\n            renderer.render(\n                <MyDiv>\n                    <span>nested</span>\n                    <span>\n                        <ClassComponent className=\"bar\" />\n                        <ClassComponent className=\"foo\" />\n                        <ClassComponent className=\"candidate\" id=\"123\" />\n                    </span>\n                </MyDiv>);\n\n            return expect(renderer, 'to contain', <ClassComponent className=\"candidate\"/>);\n        });\n\n        it('does not find a match when there are extra props in the render, and `exactly` is used', function () {\n            renderer.render(\n                <MyDiv>\n                    <span>nested</span>\n                    <span>\n                        <ClassComponent className=\"bar\" />\n                        <ClassComponent className=\"foo\" />\n                        <ClassComponent className=\"candidate\" id=\"123\" />\n                    </span>\n                </MyDiv>);\n\n            return expect(expect(renderer, 'to contain exactly', <ClassComponent className=\"candidate\" />),\n                'to be rejected with',\n                'expected\\n' +\n                '<div>\\n' +\n                '  <span>nested</span>\\n' +\n                '  <span>\\n' +\n                '    <ClassComponent className=\"bar\" />\\n' +\n                '    <ClassComponent className=\"foo\" />\\n' +\n                '    <ClassComponent className=\"candidate\" id=\"123\" />\\n' +\n                '  </span>\\n' +\n                '</div>\\n' +\n                'to contain exactly <ClassComponent className=\"candidate\" />\\n' +\n                '\\n' +\n                'the best match was\\n' +\n                '<ClassComponent className=\"candidate\" id=\"123\" // id should be removed\\n' +\n                '/>');\n        });\n\n\n        it('does not find a match when there are extra children in the render, and `exactly` is used', function () {\n            renderer.render(\n                <MyDiv>\n                    <span>nested</span>\n                    <span>\n                        <ClassComponent className=\"bar\" />\n                        <ClassComponent className=\"foo\" />\n                        <ClassComponent className=\"candidate\">\n                            <span>one</span>\n                            <span>two</span>\n                            <span>three</span>\n                        </ClassComponent>\n                    </span>\n                </MyDiv>);\n\n            return expect(expect(renderer, 'to contain exactly',\n                <ClassComponent className=\"candidate\">\n                    <span>one</span>\n                    <span>three</span>\n                </ClassComponent>),\n                'to be rejected with',\n                'expected\\n' +\n                '<div>\\n' +\n                '  <span>nested</span>\\n' +\n                '  <span>\\n' +\n                '    <ClassComponent className=\"bar\" />\\n' +\n                '    <ClassComponent className=\"foo\" />\\n' +\n                '    <ClassComponent className=\"candidate\">\\n' +\n                '      <span>one</span><span>two</span><span>three</span>\\n' +\n                '    </ClassComponent>\\n' +\n                '  </span>\\n' +\n                '</div>\\n' +\n                'to contain exactly <ClassComponent className=\"candidate\"><span>one</span><span>three</span></ClassComponent>\\n' +\n                '\\n' +\n                'the best match was\\n' +\n                '<ClassComponent className=\"candidate\">\\n' +\n                '  <span>one</span>\\n' +\n                '  <span>two</span> // should be removed\\n' +\n                '  <span>three</span>\\n' +\n                '</ClassComponent>');\n        });\n\n        it('does not find a match when there are extra children in the render, and `with all children` is used', function () {\n            renderer.render(\n                <MyDiv>\n                    <span>nested</span>\n                    <span>\n                        <ClassComponent className=\"bar\" />\n                        <ClassComponent className=\"foo\" />\n                        <ClassComponent className=\"candidate\">\n                            <span>one</span>\n                            <span>two</span>\n                            <span>three</span>\n                        </ClassComponent>\n                    </span>\n                </MyDiv>);\n\n            return expect(expect(renderer, 'to contain with all children',\n                <ClassComponent className=\"candidate\">\n                    <span>one</span>\n                    <span>three</span>\n                </ClassComponent>),\n                'to be rejected with',\n                'expected\\n' +\n                '<div>\\n' +\n                '  <span>nested</span>\\n' +\n                '  <span>\\n' +\n                '    <ClassComponent className=\"bar\" />\\n' +\n                '    <ClassComponent className=\"foo\" />\\n' +\n                '    <ClassComponent className=\"candidate\">\\n' +\n                '      <span>one</span><span>two</span><span>three</span>\\n' +\n                '    </ClassComponent>\\n' +\n                '  </span>\\n' +\n                '</div>\\n' +\n                'to contain with all children <ClassComponent className=\"candidate\"><span>one</span><span>three</span></ClassComponent>\\n' +\n                '\\n' +\n                'the best match was\\n' +\n                '<ClassComponent className=\"candidate\">\\n' +\n                '  <span>one</span>\\n' +\n                '  <span>two</span> // should be removed\\n' +\n                '  <span>three</span>\\n' +\n                '</ClassComponent>');\n        });\n\n        it('finds a match when the render contains children, but the expected does not, and `exactly` is not used', function () {\n            renderer.render(\n                <MyDiv>\n                    <span>nested</span>\n                    <span>\n                        <ClassComponent className=\"bar\" />\n                        <ClassComponent className=\"foo\" />\n                        <ClassComponent className=\"candidate\">\n                            <span>one</span>\n                            <span>two</span>\n                            <span>three</span>\n                        </ClassComponent>\n                    </span>\n                </MyDiv>);\n\n            return expect(renderer, 'to contain', <ClassComponent className=\"candidate\" />);\n        });\n\n        it('does not find a match when the render contains children, but the expected does not, and `exactly` is used', function () {\n            renderer.render(\n                <MyDiv>\n                    <span>nested</span>\n                    <span>\n                        <ClassComponent className=\"bar\" />\n                        <ClassComponent className=\"foo\" />\n                        <ClassComponent className=\"candidate\">\n                            <span>one</span>\n                            <span>two</span>\n                            <span>three</span>\n                        </ClassComponent>\n                    </span>\n                </MyDiv>);\n\n            return expect(expect(renderer, 'to contain exactly', <ClassComponent className=\"candidate\" />),\n                'to be rejected with',\n                'expected\\n' +\n                '<div>\\n' +\n                '  <span>nested</span>\\n' +\n                '  <span>\\n' +\n                '    <ClassComponent className=\"bar\" />\\n' +\n                '    <ClassComponent className=\"foo\" />\\n' +\n                '    <ClassComponent className=\"candidate\">\\n' +\n                '      <span>one</span><span>two</span><span>three</span>\\n' +\n                '    </ClassComponent>\\n' +\n                '  </span>\\n' +\n                '</div>\\n' +\n                'to contain exactly <ClassComponent className=\"candidate\" />\\n' +\n                '\\n' +\n                'the best match was\\n' +\n                '<ClassComponent className=\"bar\" // should be className=\"candidate\"\\n' +\n                '                                // -bar\\n' +\n                '                                // +candidate\\n' +\n                '/>');\n        });\n\n        it('does not find a match if the expected has children, but the candidate match does not', function () {\n\n            renderer.render(\n                <MyDiv>\n                    <span>nested</span>\n                    <span>\n                        <ClassComponent className=\"bar\" />\n                        <ClassComponent className=\"candidate\" />\n                    </span>\n                </MyDiv>);\n\n            return expect(expect(renderer, 'to contain',\n                <ClassComponent className=\"candidate\">\n                    <span>foo</span>\n                </ClassComponent>),\n                'to be rejected with',\n                'expected\\n' +\n                '<div>\\n' +\n                '  <span>nested</span>\\n' +\n                '  <span>\\n' +\n                '    <ClassComponent className=\"bar\" /><ClassComponent className=\"candidate\" />\\n' +\n                '  </span>\\n' +\n                '</div>\\n' +\n                'to contain <ClassComponent className=\"candidate\"><span>foo</span></ClassComponent>\\n' +\n                '\\n' +\n                'the best match was\\n' +\n                '<ClassComponent className=\"candidate\">\\n' +\n                '  // missing <span>foo</span>\\n' +\n                '</ClassComponent>');\n        });\n\n        it('matches even with removals in complex content without `exactly`', function () {\n\n            renderer.render(\n                <MyDiv>\n                    <ClassComponent>\n                        <MyDiv className=\"one\" />\n                        <ES5Component className=\"three\" />\n                        <span>foo</span>\n                    </ClassComponent>\n                </MyDiv>\n            );\n\n            return expect(renderer, 'to contain',\n                    <ClassComponent>\n                        <MyDiv className=\"one\" />\n                        <span>foo</span>\n                    </ClassComponent>\n            );\n        });\n\n        it('does not match with a removal and an addition in complex content with `exactly`', function () {\n\n            renderer.render(\n                <MyDiv>\n                    <ClassComponent>\n                        <div className=\"one\" />\n                        <ES5Component className=\"three\" />\n                        <span>foo</span>\n                    </ClassComponent>\n                </MyDiv>\n            );\n\n            return expect(expect(renderer, 'to contain exactly',\n                <ClassComponent>\n                    <div className=\"one\" />\n                    <ClassComponent className=\"three\" />\n                    <span>foo</span>\n                </ClassComponent>\n            ), 'to be rejected with',\n                'expected\\n' +\n                '<div>\\n' +\n                '  <ClassComponent>\\n' +\n                '    <div className=\"one\" /><ES5Component className=\"three\" /><span>foo</span>\\n' +\n                '  </ClassComponent>\\n' +\n                '</div>\\n' +\n                'to contain exactly\\n' +\n                '<ClassComponent>\\n' +\n                '  <div className=\"one\" /><ClassComponent className=\"three\" /><span>foo</span>\\n' +\n                '</ClassComponent>\\n' +\n                '\\n' +\n                'the best match was\\n' +\n                '<ClassComponent>\\n' +\n                '  <div className=\"one\" />\\n' +\n                '  // missing <ClassComponent className=\"three\" />\\n' +\n                '  <ES5Component className=\"three\" /> // should be removed\\n' +\n                '  <span>foo</span>\\n' +\n                '</ClassComponent>');\n        });\n\n    });\n\n    describe('not contains', () => {\n\n        beforeEach(() => {\n\n            renderer.render(\n                <MyDiv>\n                    <span id=\"foo\" className=\"extra\" />\n                </MyDiv>\n            );\n        });\n\n        it('passes when the content is not found', () => {\n\n            return expect(renderer, 'not to contain', <span id=\"bar\" />);\n        });\n\n        it('outputs the match found when content is found', () => {\n\n           return expect(expect(renderer, 'not to contain', <span id=\"foo\" />),\n               'to be rejected with',\n               'expected <div><span id=\"foo\" className=\"extra\" /></div>\\n' +\n               'not to contain <span id=\"foo\" />\\n' +\n               '\\n' +\n               'but found the following match\\n' +\n               '<span id=\"foo\" className=\"extra\" />');\n        });\n    });\n\n    describe('to satisfy', () => {\n\n        describe('renderOutput', () => {\n\n            it('should satisfy a matching output', () => {\n\n                renderer.render(\n                    <MyDiv>\n                        <span className=\"one\">foo</span>\n                        <span className=\"two\">bar</span>\n                    </MyDiv>\n                );\n\n                return expect(renderer.getRenderOutput(), 'to satisfy',\n                <div>\n                    <span>foo</span>\n                    <span>bar</span>\n                </div>);\n            });\n        });\n    });\n});\n"]}